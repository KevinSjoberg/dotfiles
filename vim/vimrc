" Let Vim behave in a more useful way
"
set nocompatible

" Disable functions keys in Insert mode
"
set noesckeys

" Initialize Pathogen (https://github.com/tpope/vim-pathogen)
"
execute pathogen#infect()

" Map <Leader> to ','
"
let mapleader=','

" Key code timeout
"
set ttimeout
set ttimeoutlen=50

" Use ag (The Silver Searcher) for :grep
set grepprg=ag\ --nogroup\ --nocolor

" Use ag (The Silver Searcher) for ctrlp
let g:ctrlp_user_command='ag %s -l --nocolor -g ""'

" Allow netrw to remove non-empty local directories
"
let g:netrw_localrmdir='rm -fR'

" Allow netrw to hide certain directories
"
let g:netrw_list_hide='.swp,.git'

" Syntax
"
syntax enable

" Fix backspace in insert mode
"
set backspace=indent,eol,start

" Automatically detect plugins and indention for specific filetypes
"
filetype plugin indent on

" Put new windows below the current one
"
set splitbelow

" Hide abandoned buffers
"
set hidden

" Display line- and column numbers
"
set number
set ruler

" <Tab> inserts (2) spaces
"
set expandtab
set tabstop=2
set shiftwidth=2

" Highlight search patterns while typing
"
set incsearch

" Use wildmenu
set wildmenu

" Always display the status line
"
set laststatus=2

" Enhance statusline (:help statusline for details) 
"
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y%{fugitive#statusline()}\ %=%-16(\%l,%c-%v\ %)%P

" Mappings
"
map Y y$
noremap <Leader>c :!
noremap <Leader>ve :e  $MYVIMRC<CR>
noremap <Leader>vs :so $MYVIMRC<CR>
noremap <C-b> :CtrlPBuffer<CR>

" Functions
"
if !exists("*RSpecCommands")
  function RSpecCommands(bang)
    if !a:bang
      noremap <Leader>t :!bundle exec rspec %<CR>
      noremap <Leader>T :!bundle exec rspec %:<C-R>=line('.')<CR><CR>
    else
      silent! nunmap <Leader>t
      silent! nunmap <Leader>T
    endif
  endfunction

  command -bang RSpec call RSpecCommands(<bang>0)
endif
